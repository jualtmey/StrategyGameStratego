//plugins {
//  id "org.sonarqube" version "1.0"
//}

repositories {
    mavenCentral()
}

apply plugin: "java"
apply plugin: "idea"
// apply plugin: "sonar-runner"
// apply plugin: "org.sonarqube"
apply plugin: "eclipse"
apply plugin: "maven"
apply plugin: "jacoco"

idea {
    project {
        //if you want to set specific jdk and language level
        jdkName = '1.8'
        languageLevel = '1.8'
    }
}

dependencies {
    compile group: 'org.apache.logging.log4j',      name: 'log4j-api',              version: '2.2'
    compile group: 'org.apache.logging.log4j',      name: 'log4j-core',             version: '2.2'
    compile group: 'com.google.inject',             name: 'guice',                  version: '3.0'
    compile group: 'com.fasterxml.jackson.core',    name: 'jackson-annotations',    version: '2.8.0'
    compile group: 'com.fasterxml.jackson.core',    name: 'jackson-core',           version: '2.8.1'
    compile group: 'com.fasterxml.jackson.core',    name: 'jackson-databind',       version: '2.8.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile 'org.hibernate:hibernate-core:5.2.9.Final'
    compile files('lib/db4o-8.0.276.16149-all-java5.jar')
    testCompile "junit:junit:4.11"
}

sourceSets {
    main.java.srcDir "src"
    test.java.srcDir "test"
}

jar {
    manifest {
        attributes "Main-Class": "de.htwg.stratego.StrategoApp"
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from "src/log4j2.xml"
//    from "src/hibernate.cfg.xml"
    into ("/graphics") {
        from ("/graphics")
    }
    destinationDir = file("$rootDir/../StrategoWeb/lib/")
}
    
//sonarqube {
//    properties {
//    property "sonar.projectName", "SE2015WS-06-Stratego"
//    property "sonar.projectKey", "de.htwg.stratego"
//    property "sonar.projectVersion", "2.0"
//    property "sonar.binaries", "build/classes"
//    property "sonar.java.coveragePlugin", "jacoco"
//  }
//}